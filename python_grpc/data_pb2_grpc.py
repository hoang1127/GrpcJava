# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import data_pb2 as data__pb2


class CommunicationServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PutHandler = channel.stream_unary(
        '/CommunicationService/PutHandler',
        request_serializer=data__pb2.Request.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.GetHandler = channel.unary_stream(
        '/CommunicationService/GetHandler',
        request_serializer=data__pb2.Request.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.Ping = channel.unary_unary(
        '/CommunicationService/Ping',
        request_serializer=data__pb2.Request.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )


class CommunicationServiceServicer(object):

  def PutHandler(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetHandler(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CommunicationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PutHandler': grpc.stream_unary_rpc_method_handler(
          servicer.PutHandler,
          request_deserializer=data__pb2.Request.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'GetHandler': grpc.unary_stream_rpc_method_handler(
          servicer.GetHandler,
          request_deserializer=data__pb2.Request.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=data__pb2.Request.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CommunicationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
